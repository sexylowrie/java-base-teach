/**
 * 适配器模式
 * <p>
 * 结构型设计模式
 *
 * 用途：
 * 封装有缺陷的接⼝设计
 * 统⼀多个类的接⼝设计
 * 替换依赖的外部系统
 * 兼容⽼版本接⼝
 * 适配不同格式的数据
 *
 * 代理模式：代理模式在不改变原始类接⼝的条件下，为原始类定义⼀个代理类，主要⽬的是 控制访问，⽽⾮加强功能，
 *  这是它跟装饰器模式最⼤的不同。
 * 桥接模式：桥接模式的⽬的是将接⼝部分和实现部分分离，从⽽让它们可以较为容易、也相 对独⽴地加以改变。
 * 装饰器模式：装饰者模式在不改变原始类接⼝的情况下，对原始类功能进⾏增强，并且⽀持 多个装饰器的嵌套使⽤。
 * 适配器模式：适配器模式是⼀种事后的补救策略。适配器提供跟原始类不同的接⼝，⽽代理 模式、装饰器模式提供的都是跟原始类相同的接⼝。
 *
 * @author lowrie
 * @date 2019-07-25
 */
package xin.sunce.chapter5.pattern.adapter;
